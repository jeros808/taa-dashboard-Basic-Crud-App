{"ast":null,"code":"var _jsxFileName = \"/Users/jeffrosal1/Desktop/TAADASHBOARD-1/taa-dashboard/src/Uploader.js\";\n// import React, { Component } from \"react\";\nimport { f, auth, database, storage, storageRef } from \"./config/config.js\"; // import PropTypes from \"prop-types\";\n// import { map } from \"lodash\";\n// import { useSelector } from \"react-redux\";\n// import { useFirebase, useFirebaseConnect } from \"react-redux-firebase\";\n// import Dropzone from \"react-dropzone\";\n\nimport React, { Component } from \"react\"; //import storage from \"../Firebase/index\";\n//\n\nclass ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n        this.setState(() => ({\n          image\n        }));\n      }\n    };\n\n    this.handleUpload = async imageUrl => {\n      const image = this.state.image;\n      const uploadTask = storage.ref(\"images/\".concat(image.name)).put(image); // var photoObj = {\n      //   url: imageUrl\n      // };\n\n      uploadTask.on(\"state_changed\", snapshot => {\n        // progress function ...\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        this.setState({\n          progress\n        });\n      }, error => {\n        // Error function ...\n        console.log(error);\n      }, () => {\n        storage.ref(\"/images/\").child(image.name).getDownloadURL().then(url => {\n          this.setState({\n            url\n          });\n          const messageRef = f.database().ref(\"downloadUrl\");\n          messageRef.push({\n            url: url\n          });\n          console.log(messageRef);\n        });\n      });\n    };\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.state = {\n      url: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  render() {\n    const messageRef = f.database().ref(\"downloadUrl\");\n    return React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"green-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"React Firebase Image Uploader\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"progress\", {\n      value: this.state.progress,\n      max: \"100\",\n      className: \"progress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"file-field input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"File\"), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"file-path-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"file-path validate\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      value: this.state.url,\n      name: \"upload\",\n      onClick: this.handleUpload,\n      onChange: this.onChange,\n      className: \"waves-effect waves-light btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Upload\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: this.state.url || \"https://via.placeholder.com/400x300\",\n      alt: \"Uploaded Images\",\n      height: \"300\",\n      width: \"400\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, messageRef[0]), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })); // var imagesRef = storageRef.child(\"images\");\n    // console.log(\"hello\");\n  }\n\n}\n\nexport default ImageUpload;","map":{"version":3,"sources":["/Users/jeffrosal1/Desktop/TAADASHBOARD-1/taa-dashboard/src/Uploader.js"],"names":["f","auth","database","storage","storageRef","React","Component","ImageUpload","constructor","props","handleChange","e","target","files","image","setState","handleUpload","imageUrl","state","uploadTask","ref","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","url","messageRef","push","onChange","value","bind","render"],"mappings":"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","sourcesContent":["// import React, { Component } from \"react\";\nimport { f, auth, database, storage, storageRef } from \"./config/config.js\";\n// import PropTypes from \"prop-types\";\n// import { map } from \"lodash\";\n// import { useSelector } from \"react-redux\";\n// import { useFirebase, useFirebaseConnect } from \"react-redux-firebase\";\n// import Dropzone from \"react-dropzone\";\n\nimport React, { Component } from \"react\";\n//import storage from \"../Firebase/index\";\n//\n\nclass ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  handleChange = e => {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n      this.setState(() => ({ image }));\n    }\n  };\n\n  //   //handleuploadteststart\n\n  //handleuploadend\n\n  handleUpload = async imageUrl => {\n    const { image } = this.state;\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    // var photoObj = {\n    //   url: imageUrl\n    // };\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        // progress function ...\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        this.setState({ progress });\n      },\n      error => {\n        // Error function ...\n        console.log(error);\n      },\n      () => {\n        storage\n          .ref(\"/images/\")\n          .child(image.name)\n          .getDownloadURL()\n\n          .then(url => {\n            this.setState({ url });\n            const messageRef = f.database().ref(\"downloadUrl\");\n            messageRef.push({\n              url: url\n            });\n            console.log(messageRef);\n          });\n      }\n    );\n  };\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n  render() {\n    const messageRef = f.database().ref(\"downloadUrl\");\n    return (\n      <div className='center'>\n        <br />\n        <h2 className='green-text'>React Firebase Image Uploader</h2>\n        <br />\n        <br />\n        <div className='row'>\n          <progress\n            value={this.state.progress}\n            max='100'\n            className='progress'\n          />\n        </div>\n        <br />\n        <br />\n        <br />\n        <div className='file-field input-field'>\n          <div className='btn'>\n            <span>File</span>\n            <input type='file' onChange={this.handleChange} />\n          </div>\n          <div className='file-path-wrapper'>\n            <input className='file-path validate' type='text' />\n          </div>\n        </div>\n        <button\n          value={this.state.url}\n          name='upload'\n          onClick={this.handleUpload}\n          onChange={this.onChange}\n          className='waves-effect waves-light btn'\n        >\n          Upload\n        </button>\n        <br />\n        <br />\n        {\n          <img\n            src={this.state.url || \"https://via.placeholder.com/400x300\"}\n            alt='Uploaded Images'\n            height='300'\n            width='400'\n          />\n        }\n        <p>{messageRef[0]}</p>\n        <br></br>\n      </div>\n    );\n    // var imagesRef = storageRef.child(\"images\");\n    // console.log(\"hello\");\n  }\n}\n\nexport default ImageUpload;\n"]},"metadata":{},"sourceType":"module"}